/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./js/app.js":
/*!*******************!*\
  !*** ./js/app.js ***!
  \*******************/
/***/ (() => {

eval("jQuery(document).ready(function($) {\n    // trigger login popup\n    const $body = $('body')\n    const $window = $(window)\n    $('.login-link').unbind('click').on('click', function(e) {\n        e.stopPropagation();\n        e.preventDefault();\n        $('.account-item .button').trigger('click');\n        $('.mfp-wrap').removeClass('off-canvas-right');\n        $('.mfp-content').removeClass('off-canvas-cart');\n    })\n    // circle single product listing //\n    $('.reset_variations').unbind('click').on('click', function(e) {\n        $('.item-product-variation').removeClass('active-item');\n    })\n    $('.item-product-variation').unbind('click').on('click', function(e) {\n        var $this = $(this),\n            term = $this.attr('data-value'),\n            title = $this.attr('title'),\n            attr = $this.attr('data-attr_name'),\n            $selectbox = $('select#' + attr);\n\n        if ($this.hasClass('outstock')) {\n            return false;\n        }\n\n        $selectbox.val(term).trigger('change');\n\n        $this.addClass('active-item').siblings().removeClass('active-item');\n        $('body').trigger('attr_selected', [attr, term, title]);\n\n        e.preventDefault();\n    })\n    if ($('.item-product-variation:not(.outstock)').eq(0).length > 0) $('.item-product-variation:not(.outstock)').eq(0).trigger('click');\n    // end circle single product listing //\n\n    // From price\n\n    $('.box .variable-item:not(.disabled)').click(function(){\n      let value = $(this).data('value');\n      let el_from_price = $(this).parents('.box-text-products').find('.bt_from_price');\n      let prices = el_from_price.data('price_per_unit');\n      let from_html = '<span class=\"bt_from_price_amount\">' + prices[value] + '</span><span class=\"icon-g\"> per gram<span>';\n      el_from_price.html(from_html);\n    })\n    // trigger variation show/\n    $( \".variations_form\" ).on( \"show_variation\", function ( event, variation ) {\n      $('.single_variation_wrap .points').remove();\n      $('.bt_attr_weight').remove();\n      let el_points = $('.sticky-add-to-cart-wrapper .sticky-add-to-cart__product');\n      var selected_variation = [];\n      if(variation.attributes){\n        $( variation.attributes ).each(function(e,v){\n          var attrs_names = Object.keys(v);\n          var attrs_values = Object.values(v);\n          $( attrs_names ).each(function(_e,_v){\n            selected_variation.push($('.product-info select[name=\"'+_v+'\"]').find('option[value=\"'+attrs_values[_e]+'\"]').text());\n          })\n        })\n      }\n      if(selected_variation.length > 0){\n        el_points.append('<span class=\"bt_attr_weight\"> - ' + selected_variation.join() + '</span>');\n      }\n    });\n\n    swatchesSingle = function() {\n    if (!$body.hasClass('single-product')) {\n      return\n    }\n\n    const $qty = $('form.cart .quantity')\n    const $qtyInput = $qty.find('input[name=\"quantity\"]')\n    const $variationSelect = $('.variations_form select')\n    const $addToCartButton = $('form.cart .single_add_to_cart_button')\n    const $priceSingle = $('.product-page-price')\n    const currencySymbol = $('.woocommerce-Price-currencySymbol')\n      .first()\n      .text()\n\n    $('.cart:not(.cart_group)').on('updated_addons', function() {\n        if($('#product-addons-total').find('.wc-pao-subtotal-line .amount').length > 0){\n          let price = $('#product-addons-total').find('.wc-pao-subtotal-line .amount').html();\n          $addToCartButton.html('<span>Add to cart</span><span class=\"divider\">|</span><span>'+price+'</span>')\n        }\n    })\n    $('.variations_form').on('show_variation', function(e, variation) {\n\n      // Change price HTML.\n      $priceSingle.html($(variation.price_html).filter(\".price\"))\n\n      // Change add to cart text.\n      $addToCartButton.attr('data-price', variation.display_price)\n      $addToCartButton.text(`Add to cart`)\n\n      /**\n       * => Mike fixed NaN\n       */\n      let qtyNumber = parseInt($qtyInput.val(), 10) || 1;\n\n      const subTotal = qtyNumber * parseFloat(variation.display_price)\n      const formatSubTotal = subTotal.toFixed(2).replace(/(.)(?=(\\d{3})+$)/g, '$1,')\n      // console.log(subTotal, parseInt($qtyInput.val(), 10), variation.display_price);\n      if ($addToCartButton.length && 0 < variation.display_price) {\n        $addToCartButton.html('<span>Add to cart</span><span class=\"divider\">|</span><span>'+currencySymbol+formatSubTotal+'</span>')\n      }\n\n      setTimeout(() => {\n        if($qtyInput.val() == '') {\n          $qtyInput.val(qtyNumber)\n        }\n      }, 50)\n\n    })\n    // mix and max product\n    $('.mnm_form').on('wc-mnm-updated-totals', function(e,container) {\n      const price = container.calculate_totals().totals.price;\n      $addToCartButton.attr('data-price',price);\n      const subTotal = parseInt(container.get_quantity(), 10) * parseFloat(price)\n      const formatSubTotal = subTotal.toFixed(2).replace(/(.)(?=(\\d{3})+$)/g, '$1,')\n\n      if ($addToCartButton.length) {\n        $addToCartButton.html('<span>Add to cart</span><span class=\"divider\">|</span><span>'+currencySymbol+formatSubTotal+'</span>')\n      }\n    })\n\n    $qtyInput.on('change', function() {\n      const price = $addToCartButton.attr('data-price')\n      const qty = parseInt($qtyInput.val(), 10)\n      let pointEarned = price\n      if ($addToCartButton.length && !$addToCartButton.is('.disabled') && 0 < price) {\n        const subTotal = qty * parseFloat(price)\n        const formatSubTotal = subTotal.toFixed(2).replace(/(.)(?=(\\d{3})+$)/g, '$1,')\n        $addToCartButton.html(`<span>Add to cart</span>\n                              <span class=\"divider\">|</span>\n                              <span>${currencySymbol}${formatSubTotal}</span>`)\n      }\n    })\n\n    let $mnm_form = $('.mnm_form.cart');\n    let $mnm_quantity = $mnm_form.find('.mnm-quantity');\n    let $mnm_min_size = $mnm_form.find('.mnm_cart').data('min_container_size');\n    let $mnm_max_size = $mnm_form.find('.mnm_cart').data('max_container_size');\n    var $mnm_qty_total;\n\n    $mnm_quantity.on('change', function() {\n      $mnm_qty_total = 0;\n      $mnm_form.find('.mnm_item').each(function(){\n        var $mnmQty = parseInt($(this).find('.mnm-quantity').val());\n\n        if(!isNaN($mnmQty)) {\n          $mnm_qty_total = $mnm_qty_total + $mnmQty;\n        }\n      })\n\n      if($mnm_min_size <= $mnm_qty_total && $mnm_qty_total <= $mnm_max_size) {\n        $('body').addClass('has-mnm-tabular');\n        $('body').addClass('has-sticky-product-cart');\n        $('.sticky-add-to-cart-wrapper .sticky-add-to-cart').addClass('sticky-add-to-cart--active');\n      }\n    });\n\n    $(window).scroll(function() {\n      if($('body').hasClass('has-mnm-tabular')) {\n        $('body').addClass('has-sticky-product-cart');\n        $('.sticky-add-to-cart-wrapper .sticky-add-to-cart').addClass('sticky-add-to-cart--active');\n      }\n    });\n\n  }\n  // remove product on order bump\n  $('body').on('updated_checkout', function(data){\n    var items = $('.wfob_bump .wfob_Box').length;\n    let checked_items = 0;\n    $('.wfob_bump .wfob_Box').each(function(){\n      if($(this).find('.wfob_checkbox').is(':checked')){\n        checked_items++;\n        $(this).remove();\n      }\n    })\n    if(items == checked_items){\n      $('.wfob_bump_wrapper').remove();\n    }\n  })\n\n  // rewards\n  jQuery('body').on('click', '.claim_reward', function(e) {\n      e.preventDefault();\n      var _this = $(this);\n      var _container = _this.parents('.claim_reward_form');\n      _this.text('Processing...');\n      var product_id = _container.find('input[name=\"product_id\"]').val();\n      var custom_price = _container.find('input[name=\"custom_price\"]').val();\n      var variation_id = _container.find('input[name=\"variation_id\"]').val();\n      var redeem_point = _container.find('input[name=\"redeem_point\"]').val();\n      var data = {\n          action: \"add_to_cart_reward\",\n          product_id: product_id,\n          custom_price: custom_price,\n          variation_id: variation_id,\n          redeem_point: redeem_point,\n      };\n      console.log(data);\n      $.ajax({\n          type: \"POST\",\n          url: pp_php_admin_data.ajax_url,\n          data: data,\n          success: function(data) {\n            // console.log(data);\n              _this.prop('disabled', true).text('Added to cart');\n              // jQuery(document.body).trigger('wc_fragment_refresh');\n              location.reload();\n          }\n      });\n  })\n  //\n  swatchesSingle();\n\n  function pg_show_price(id, variationid, price, pricepergram, regularprice = 0, e, virtual_variation = false){\n  \te.closest('.product-small.col').querySelector('.add_to_cart_button').setAttribute('data-product_id', variationid);\n  \te.closest('.product-small.col').querySelector('.add_to_cart_button').setAttribute('data-custom_id', '');\n  \t//jQuery('.product-small.col').removeClass('active');\n\n  jQuery(e).closest('.product-small.col').addClass('active');\n  jQuery(e).closest('.product-small.col').addClass('loaded');\n\n  \tif(virtual_variation){\n  \t\te.closest('.product-small.col').querySelector('.add_to_cart_button').setAttribute('data-custom_id', virtual_variation);\n  \t\t//jQuery(e).closest('.product-small.col .pg_4oz').find('.label_save').fadeOut();\n  \t\tjQuery(e).closest('.product-small.col').find('.pricePG-wrapper').addClass('pg_4oz');\n  \t}\n  \telse {\n  \t\tjQuery(e).closest('.product-small.col .pg_4oz').find('.label_save').fadeIn();\n  \t\tjQuery(e).closest('.product-small.col').find('.pricePG-wrapper').removeClass('pg_4oz');\n  \t}\n\n  \tif(jQuery(e).closest('.product-small').hasClass('pg_4oz')) { /*# contains 4oz*/\n  \t\tjQuery('.product-small.col .pg_4oz').find('.label_save').hide();\n  \t}\n\n  \tArray.from(e.closest('.product-small.col').querySelectorAll('ul li')).forEach(function(el) {\n  \t\tel.classList.remove('active');\n  \t});\n  \te.classList.add('active');\n      jQuery(e).closest('.product-small.col').find('.col-inner span.price').fadeOut('fast').fadeIn('fast');\n  \tvar\tregularpriceHTML = '';\n  \tif(regularprice != '0'){\n  \t\tregularpriceHTML = '<del><span class=\"woocommerce-Price-amount amount\"><bdi>$'+regularprice+'</bdi></span></del>';\n  \t}\n  \te.closest('.product-small.col').querySelector('.col-inner span.price').innerHTML = regularpriceHTML+'<ins><span class=\"woocommerce-Price-amount amount\"><bdi>$'+price+'</bdi></span></ins>';\n    jQuery(e).closest('.product-small.col').find('.col-inner .bt_from_price').fadeOut('fast').fadeIn('fast');\n  \te.closest('.product-small.col').querySelector('.col-inner .bt_from_price').innerHTML = '<strong>$'+pricepergram.toFixed(2)+'</strong> per gram';\n  \tjQuery(e).closest('.product-small.col').find('.add_to_cart_button').removeAttr('disabled');\n  \tjQuery(e).closest('.product-small.col').find('.add_to_cart_button').removeClass('select_size');\n  \tjQuery(e).closest('.product-small.col').find('.add_to_cart_button').addClass('ajax_add_to_cart');\n  \tjQuery(e).closest('.product-small.col').find('.add_to_cart_button').html('ADD TO CART');\n  }\n\n  function pg_animate_add_to_cart_btn(e){\n  \te.classList.toggle('loading');\n  \te.classList.toggle('button');\n  \te.innerText = '';\n\n  \tsetTimeout(function(){\n  \t\te.classList.toggle('loading');\n  \t\te.classList.toggle('button');\n  \t\te.innerText = 'Add to cart';\n  \t}, 1500);\n  }\n\n  /* UPDATE: PG SELECT VARIATION, PRICEPERGRAM */\n  function PG_update_pricepergram(){\n  \tsetTimeout(function(){\n  \t\tvar selectedVariation = document.querySelector('input[name=variation_id]').value;\n  \t\tif(selectedVariation != '' && selectedVariation > 0){\n  \t\tlet price = pricepergram_list[selectedVariation];\n  \t\t\tif(price > 0){\n  \t\t\tjQuery('.woocommerce-variation-availability .pricepergram').remove();\n  \t\t\tjQuery('.woocommerce-variation-availability').prepend(\"<div class='pricepergram' style='display:none;'><strong>$\"+price+\"</strong> per gram</div>\");\n  \t\t\tjQuery('.woocommerce-variation-availability .pricepergram').fadeIn();\n\n  \t\t\tjQuery('.pricepergram_shorcode').each(function(i, obj) {\n  \t\t\t\tjQuery(obj).html('<strong>$'+pricepergram_firstPrice+'</strong> per gram');\n  \t\t\t});\n  \t\t\t}\n\n  \t\t}\n  \t\t}, 200);\n  }\n})\n\n\n//# sourceURL=webpack://flatsome-child/./js/app.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./js/app.js"]();
/******/ 	
/******/ })()
;